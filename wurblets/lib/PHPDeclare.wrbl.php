<?php
// wurblet generated by Wurbiler, see http://www.wurblizer.org for more details.

require_once('AbstractWurblet.php');
require_once('AbstractFlex.php');

class PHPDeclare extends AbstractFlex {
  public function run() {
    parent::run();

/* vim: set filetype=php :*//*<?php*/
    $ac = $this->getArgCount();
    if($ac != 1)
        throw new Exception("usage: wurblet <guard> PHPDeclare <modelname>");

    $modelFile = WurbUtil::translateVars($this->getArg(0), $this->getContainer()->getProperties(PROPSPACE_WURBLET));

    // fetch the model
    $model = $this->newGeneric4ColModelInstance($modelFile);
    
    foreach($model->getAttributeList() as $attr) {
        if(!isset($attr['nomethod'])) {
            $type = $model->getMappedDataType($attr['type'], 'php');
            $line = sprintf("%-10s %-20s %s", $type, $attr['name'], $attr['comment']);
            fwrite($this->out,$this->source[0]); //  private $
            fwrite($this->out,$attr['name']);
            fwrite($this->out,$this->source[1]); // ; 
        }
    }
/*?>*/
  }
}
?>
